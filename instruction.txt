При запуске программы надо указать 
1.Количество состояний: натуральное число: например 3
2.Алфавит: буквы через запятые: a,b,c
3.Переходы писать в фигурных скобках. Все состояния начинаются с буквы q дальше индекс который меньше количества
состояний которую ввели в 1-м пункте (например q1, q2). Индексация начинается с 0. В круглых скобках пишем состояние,
и букву по которуму он переходит. Потом двоиточие с пробелом и в фигурных скобках, через запятые, состояния в котрые
можно перейти по этой букве. вот пример {
        ('q0', 'ab'): {'q1'},
        ('q2', '1'): {'q0'},
        ('q0', 'b'): {'q1'},
        ('q1', 'b'): {'q2','q1'},
    }
Примечание: нельзя дважды писать одно и то же состояние с перегодом по одному и тому же слову. То есть, нельзя писать 
{   состояние  слово    переход
    ('q0',    'aba'): {q1, q2},
    ('q0',    'aba'): {q3}
}
4.Финальные состояния:q с индексом меньше чем количество состояний, через запятые (q1,q0)

Для отображения автомата можно нажать на кнопку "Нарисовать". Остальные кнопки для того чтобы автомат привести в другой вид.
После перехода в Полный детерминированный конечный автомат больше ничего неполучится менять в автомате.


Пример для запуска.
1. 3
2. a,b,c,1 //единичкой обозначиваем пустое слово.
3.  {
        ('q0', 'ab'): {'q1'},
        ('q2', '1'): {'q0'},
        ('q0', 'b'): {'q1'},
        ('q1', 'b'): {'q2','q1'},
    }
4. q0,q2 

# Пример автомата  // не для запуска программы
nfa_example = NFA(
    states=['q0', 'q1','q2'],
    alphabet=['a', 'b'],
    transition_function={
        ('q0', 'ab'): {'q1'},
        ('q0', 'b'): {'q1'},
        ('q1', 'b'): {'q2','q1'},
    },
    initial_state='q0',
    final_states=['q1']
)